@model IEnumerable<Gymbokning.Models.GymClass>

@{
    ViewData["Title"] = "Index";
    var currentUserId = ViewData["CurrentUserId"] as string;
}

<h1>Index</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Where(gc => gc.StartTime > DateTime.Now))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @{
                    var isBooked = item.AttendingMembers.Any(aug => aug.ApplicationUserId == currentUserId);
                }
                <a asp-action="BookingToggle" asp-route-id="@item.Id" class="btn @(isBooked ? "btn-danger" : "btn-success") btn-sm">
                    @(isBooked ? "Cancel" : "Book")
                </a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>